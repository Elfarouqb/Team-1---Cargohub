name: CargoHub Refactor Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up .NET SDK
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      # Set up Python environment
      - name: Set up Python environment
        uses: actions/setup-python@v2
        with:
          python-version: '3.11.0'

      # Install pytest and dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install requests

      # Restore .NET dependencies
      - name: Restore dependencies
        run: dotnet restore
        working-directory: Cargohub V2\Cargohub V2\Tests

      # Build the application
      - name: Build
        run: dotnet build --no-restore
        working-directory: Cargohub V2\Cargohub V2\Tests

      # Start the ASP.NET application in the background
      - name: Start ASP.NET application in background
        run: |
          nohup dotnet run --urls=http://localhost:5285 > output.log 2>&1 &
        working-directory: Cargohub V2\Cargohub V2\Tests

      # Wait for the ASP.NET application to start
      - name: Wait for ASP.NET application to start
        run: |
          echo "Waiting for ASP.NET application to start..."
          for i in {1..12}; do
            if curl -s http://localhost:5285/api/v1/Clients; then
              echo "ASP.NET application is up!"
              break
            fi
            echo "Waiting for ASP.NET application to be available..."
            sleep 10
          done

      # Run Python Integration Tests
      - name: Run Python Integration Tests
        run: pytest
        working-directory: Cargohub V2\Cargohub V2\Tests

