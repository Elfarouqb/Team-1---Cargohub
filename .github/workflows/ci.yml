name: CargoHub CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Debug directory structure
      - name: List Files
        run: ls -R
        working-directory: .

      # Set up .NET SDK for .NET 8.0
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      # Restore .NET dependencies for the main app
      - name: Restore dependencies (Main App)
        run: dotnet restore
        working-directory: CargoHubV2/Cargohub V2/Cargohub V2

      # Build the main application
      - name: Build (Main App)
        run: dotnet build --no-restore --configuration Release
        working-directory: CargoHubV2/Cargohub V2/Cargohub V2

  test:
    runs-on: ubuntu-latest
    needs: build  # Ensures this job runs only after the build job is successful
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up .NET SDK for .NET 8.0
      - name: Setup .NET SDK for testing
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      # Restore .NET dependencies for the UnitTests project
      - name: Restore dependencies (Unit Tests)
        run: dotnet restore
        working-directory: UnitTests

      # Run unit tests for the UnitTests project
      - name: Run unit tests
        run: |
          dotnet test UnitTests/UnitTests.csproj --configuration Release --no-build --collect:"XPlat Code Coverage"
        working-directory: .

      # Upload test results
      - name: Upload test results
        if: always()  # Always run this step, regardless of success/failure
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: ./UnitTests/test-results


